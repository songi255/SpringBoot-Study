1인개발에서 제일 부족한것이 뭘까? 자본, 트래픽, 사용자, 콘텐츠 등 모든게 다 부족하다
그 중에서도 시간과 인력이 제일 부족하다. 그래서 필자는 1인 프로젝트 진행 시 메인기능 외 나머지는 전부 외부서비스에 의존해 개발한다. 이들을 소개해보겠다.

댓글
    - 구현에는 손이 많이 간다. 대댓, tag, 이미지업로드, 댓글 에디터, 댓글 수정/삭제권한관리 등등...
    - 이걸 구현하다가 정작 서비스 출시가 미뤄질 수도 있다..
    - Disqus
        - 소셜 댓글 서비스. JS 코드만 등록하면 위젯형태로 서비스에서 바로 사용이 가능하다.
        - 댓글기능이 없거나 빈약한 블로그나 커뮤니티 서비스에서 많이들 사용한다.
        - 유료버전도 있지만, 트래픽이 많지 않은 경우 상관없다.
        - 특히 댓글 작성자에 대한 기능이 막강해 많은 개인블로거들이 애용한다.
        - 이건 외국의 소셜 댓글 서비스이다.
    - LiveRe
        - 국내에는 이게 있다.
        - 댓글을 위한 별도회원가입은 필요없다. 기존 SNS 계정만 있으면 언제든 댓글을 남길 수 있다.
        - 프리미엄기능 외 기본기능들은 모두 무료. 그래서 티스토리는 자체 플러그인까지 지운한다.
    - Utterances
        - 위 2개는 일반적인 서비스에, 이건 개발자를 위한 서비스이다.
        - 흔히들 GitHub 댓글이라고 한다. 이슈기능을 이용했기 때문에 무료로 사용가능하다.
        - 특히 GitHub의 마크다운 에디터를 그대로 사용해서, 댓글을 마크다운으로 작성할 수 있다.

외부 서비스 연동
    - 콘텐츠 서비스 만들다보면 SNS 연동이 필요할 때가 많다.
        - 예를들면 RSS나, 자동포스팅같은 것...
        - 각 SNS마다 API를 참고해서 구현하기엔 부담스럽다.
    - Zapier
        - 수많은 클라우드와 SNS(750개 이상)들의 Open API를 이용해 상호연동을 지원한다.
        - 원리는 간단. Trigger와 Action을 사용한다.
        - 월 100건은 무료지원, 그 이상은 청구된다. 매일 1~3번 정도의 요청만 있다면 충분히 사용할 만하다.
    - IFTTT
        - If This Then That의 약자.
        - 직접 나만의 연동템플릿을 만들 수도 있다.

방문자 분석
    - 구글 애널리틱스
        - 이미 수많은 마케터와 운영자들이 사용중인 대중화된 도구이다.
        - 다른 구글 서비스들과 연동도 굉장히 잘 되고 있다.
        - 만약 google adsense가 있는 서비스라면 그 지표도 받을 수 있다.
        - 스크립트만 넣으면 수준급의 사이트분석이 가능하니 필수이다.

CDN : Content Delivery Network
    - 지금같이 시작단계에서는 트래픽분산이 목적이다.
    - JS, CSS, Image 등 정적파일들은 CDN 서비스에서 조회하고, API 요청만 서버에서 받아주면 되니 비용과 속도를 많이 절약할 수 있따.
    - CloudFlare
        - 높은 트래픽의 나무위키 역시 이걸 사용중이다.
        - 서버요금을 줄이기 위해서라도 곡 사용해보도록 하자.

이메일 마케팅
    - 요즘 콘텐츠 서비스들은 대부분 뉴스레터기능을 지원한다.
    - 다만 이를 위해서 메일서버구축, 메일템플릿제작, 메일 양식의 반응형기능 지원, 수신자 통계 등등.. 할게 많다.
    - Mailchimp
        - 회원 2000명에게 월 12000개의 메일을 무료로 보낼 수 있으니 초기에 사용하기 아주 좋다.
        - 특히 반응형을 고려한 뉴스레터나 구독자관리, 통계, A/B 테스트 등등의 기능까지 지원해서, 개발자가 더이상 무언가를 하지 않아도 될 정도의 뉴스레터 서비스를 운영할 수 있다.

이렇게 크게 5가지 도구를 소개해보았다. 직접 구현해보는것도 큰 도움이 되지만, 언제 서비스될지는 미지수이다.
작은 것 하나하나까지 직접하기에 1인개발은 리소스가 너무 부족하다는 점을 상기해주면 좋을 듯 하다.

마지막으로 도움될 만한얘기 몇개를 한다.
    - 욕심부리지 말것
        - 수많은 고려사항과 기능이 떠오를 것이다. 경험상 모두 만족시키면서 개발은 어렵다.
        - 혼자 출시가 목표라면 핵심기능을 제외한 나머지는 모두 무시하라.
        - 비슷한 예로, 국비교육 프로젝트에서 너무 기획에 함몰되면 안되는것이다.
    - 혼자서 개발하기
        - 말 그대로 혼자 개발하는 것이 출시확률이 더 높다.
        - 이것저것 논의하다보면 기획만 커지고 구현되지 못하는 경우가 빈번하다.
        - 의견충돌을 해결하는데 너무 많은 시간을 소모하는 때도 많다.
        - 확실한 리더가 있는 게 아니면 혼자서 개발하는게 더 빨리 완료되었다.
    - 가장 자신있는 개발환경 사용할 것.
사실, 가장 도움되는 방법은 24/365 서비스하는 회사에서 몇년간 일해보는 것이다.
    - SI/SM이 아닌, 자사서비스를 하는 곳에 입사해서 어떻게 문제를 해결하고 어디까지 고려하는지 경험해보는 게 가장 좋다.
    - 즉 흔히 말하는 대기업 SI 보다 네카라쿠배당토가 낫다는 말. 애초에 이런 환경이 아니면 관련지식은 제대로 익히기 어렵다.
    - 그래서 취준생이라면 창업으로 커리어를 시작하기보다 이런회사를 먼저 목표로 하는 것이 개발자로서 더 멀리갈 수 있지 않을까 생각한다고 한다....

