# authentication info for using google oauth.
spring.security.oauth2.client.registration.google.client-id=1047000775731-p98tfhvbk6ep.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=GOCSPX-UWLQbsSwqYY6H6rWl
# 'scope' is not used in many cases. because it's default is (openid, profile, email)
# but we didn't add openid, for preventing recognized to 'Open id Provider'
# if not, we have to make each OAuth2Sevice for OpenId Provider Service(Google) and service not like that(Naver, KaKao.. etc)
# so, we put out openid for use one OAuth2Sevice
spring.security.oauth2.client.registration.google.scope=profile,email

# in Spring, properties named like 'application-xxx.properties', make profile named 'xxx' automatically.
# in that, you can get properties settings by call like 'profile=xxx'
# you can call in several ways, in here, we'll make 'application.properties'(Spring's basic config file) contains this file.

# this file is very danger for security. DON'T UPLOAD THIS FILE ON GITHUB!!!
# but it seems .gitignore doesn't work. just be careful..

# naver oauth login security id & key
# naver doesn't support springSecurity, so you have to write all values that CommonOAuth2Provider did.
# registration
spring.security.oauth2.client.registration.naver.client-id=w9fbjBiIpp2
spring.security.oauth2.client.registration.naver.client-secret=WyrbY3
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver
# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
# user-name-attribute is 'response'. because of naver's returning json format.
# you can't use subField in Spring Security but, top level fields of naver's response json is [resultCode, message, response]. so you should use response..